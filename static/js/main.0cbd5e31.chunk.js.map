{"version":3,"sources":["apis/meetingFunctions.js","apis/urls.js","keys/screen.js","component/user_buttons.js","component/user_area.js","component/main_screen.js","App.js","reportWebVitals.js","index.js"],"names":["handleMuteMyself","user_id","a","axios","post","muteAllParticipants","UserButtons","user","onClick","userId","isMuted","isAdmin","UserArea","className","userName","roleName","VideoConference","useState","usersList","setUsersList","meetingName","response","get","data","getMeetingName","useEffect","fetchMeetingUsers","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MASaA,EAAgB,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sEACxBC,IAAMC,KAAN,UCPN,0EDOM,OAAwCH,IADhB,2CAAH,sDAIhBI,EAAmB,uCAAG,sBAAAH,EAAA,sEAC3BC,IAAMC,KAAN,UCbN,wEDaM,OEdiB,IFaU,2CAAH,qD,OGYjBE,EAjBK,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACrB,OACE,gCACE,wBACEC,QAAS,kBDXY,GCYFD,EAAKE,OAAST,EAAiBO,EAAKE,QAAU,IAFnE,SAKGF,EAAKG,QAAU,oBAAsB,oBAEvCH,EAAKI,SACJ,wBAAQH,QAASH,EAAjB,uCCLOO,EAVE,SAAC,GAAc,IAAZL,EAAW,EAAXA,KAClB,OACE,sBAAKM,UAAU,YAAf,UACE,8BAAMN,EAAKO,WACX,8BAAMP,EAAKQ,WACX,cAAC,EAAD,CAAaR,KAAMA,QCaVS,EAlBS,WACtB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACMC,ELWsB,WAC5B,IAAMC,EAAWlB,IAAMmB,IAAN,UCbjB,mEDaiB,OElBM,IFmBvB,cAAOD,QAAP,IAAOA,OAAP,EAAOA,EAAUE,KKbGC,GAMpB,OAJAC,qBAAU,WACRN,ELa6B,WAC/B,IAAME,EAAWlB,IAAMmB,IAAN,UChBjB,2EDgBiB,OEvBM,IFwBvB,cAAOD,QAAP,IAAOA,OAAP,EAAOA,EAAUE,KKfFG,OAIb,gCACE,iDAAoBN,EAApB,cACCF,EAAUS,KAAI,SAACpB,GAAD,OACb,cAAC,EAAD,CAAUA,KAAMA,WCNTqB,MARf,WACE,OACE,qBAAKf,UAAU,MAAf,SACE,cAAC,EAAD,OCOSgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0cbd5e31.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { meetingId } from \"../keys/screen\";\r\nimport {\r\n  HANDLE_MUTE_PARTICIPANT,\r\n  MUTE_ALL_PARTICIPANTS,\r\n  GET_MEETING_NAME,\r\n  GET_MEETING_PARTICIPANTS,\r\n} from \"./urls\";\r\n\r\nexport const handleMuteMyself = async (user_id) => {\r\n  await axios.post(`${HANDLE_MUTE_PARTICIPANT}${user_id}`);\r\n};\r\n\r\nexport const muteAllParticipants = async () => {\r\n  await axios.post(`${MUTE_ALL_PARTICIPANTS}${meetingId}`);\r\n};\r\n\r\nexport const getMeetingName = () => {\r\n  const response = axios.get(`${GET_MEETING_NAME}${meetingId}`);\r\n  return response?.data;\r\n};\r\n\r\nexport const fetchMeetingUsers = () => {\r\n  const response = axios.get(`${GET_MEETING_PARTICIPANTS}${meetingId}`);\r\n  return response?.data;\r\n};\r\n","export const MUTE_ALL_PARTICIPANTS =\r\n  \"https://localhost:44392/api/MeetingParticipante/MuteAllParticipants/\";\r\nexport const HANDLE_MUTE_PARTICIPANT =\r\n  \"https://localhost:44392/api/MeetingParticipante/HandleMuteParticipant/\";\r\nexport const GET_MEETING_NAME =\r\n  \"https://localhost:44392/api/MeetingParticipante/GetMeetingName/\";\r\nexport const GET_MEETING_PARTICIPANTS =\r\n  \"https://localhost:44392/api/MeetingParticipante/GetMeetingParticipants/\";","export const meetingId = 1;\r\nexport const currentUserId = 1;\r\n","import React from \"react\";\r\nimport \"./user_area.css\";\r\nimport {\r\n  handleMuteMyself,\r\n  muteAllParticipants,\r\n} from \"../apis/meetingFunctions\";\r\nimport { currentUserId } from \"../keys/screen\";\r\n\r\nconst UserButtons = ({ user }) => {\r\n  return (\r\n    <div>\r\n      <button\r\n        onClick={() =>\r\n          currentUserId == user.userId ? handleMuteMyself(user.userId) : {}\r\n        }\r\n      >\r\n        {user.isMuted ? \"Unmute Microphone\" : \"Mute Microphone\"}\r\n      </button>\r\n      {user.isAdmin && (\r\n        <button onClick={muteAllParticipants}>Mute All Participants</button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserButtons;\r\n","import React from \"react\";\r\nimport \"./user_area.css\";\r\nimport UserButtons from \"./user_buttons\";\r\n\r\nconst UserArea = ({ user }) => {\r\n  return (\r\n    <div className=\"user-area\">\r\n      <div>{user.userName}</div>\r\n      <div>{user.roleName}</div>\r\n      <UserButtons user={user} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserArea;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport UserArea from \"./user_area\";\r\nimport { getMeetingName, fetchMeetingUsers } from \"../apis/meetingFunctions\";\r\n\r\nconst VideoConference = () => {\r\n  const [usersList, setUsersList] = useState([]);\r\n  const meetingName = getMeetingName();\r\n\r\n  useEffect(() => {\r\n    setUsersList(fetchMeetingUsers());\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <h1>Welcome to the {meetingName} Meeting</h1>\r\n      {usersList.map((user) => (\r\n        <UserArea user={user} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoConference;\r\n","import VideoConference from \"./component/main_screen\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <VideoConference />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}